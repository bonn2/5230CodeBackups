// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.Picasso;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveCANTalon1;
    public static WPI_TalonSRX driveCANTalon2;
    public static WPI_TalonSRX driveCANTalon3;
    public static WPI_TalonSRX driveCANTalon4;
    public static RobotDrive driveRobotDrive41;
    public static WPI_TalonSRX winchWinchTalon;
    public static WPI_TalonSRX winchWinchTalon2;
    public static WPI_TalonSRX intakeIntakeTalon;
    public static WPI_TalonSRX shooterShooterTalon;
    public static Compressor gearAirMaker;
    public static DoubleSolenoid gearGearSol;
    public static DoubleSolenoid shakerShakeSol;
    public static Servo cameraServo1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveCANTalon1 = new WPI_TalonSRX(1);
        //LiveWindow.addActuator("drive", "CAN Talon 1", driveCANTalon1);
        
        driveCANTalon2 = new WPI_TalonSRX(2);
        //LiveWindow.addActuator("drive", "CAN Talon 2", driveCANTalon2);
        
        driveCANTalon3 = new WPI_TalonSRX(3);
       // LiveWindow.addActuator("drive", "CAN Talon 3", driveCANTalon3);
        
        driveCANTalon4 = new WPI_TalonSRX(4);
     //   LiveWindow.addActuator("drive", "CAN Talon 4", driveCANTalon4);
        
        driveRobotDrive41 = new RobotDrive(driveCANTalon3, driveCANTalon4,
              driveCANTalon2, driveCANTalon1);
        
        driveRobotDrive41.setSafetyEnabled(false);
        driveRobotDrive41.setExpiration(0.1);
        driveRobotDrive41.setSensitivity(0.5);
        driveRobotDrive41.setMaxOutput(1.0);
        driveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        driveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        winchWinchTalon = new WPI_TalonSRX(5);
        //LiveWindow.addActuator("winch", "WinchTalon", winchWinchTalon);
        
        winchWinchTalon2 = new WPI_TalonSRX(13);
        //LiveWindow.addActuator("winch", "WinchTalon2", winchWinchTalon2);
        
        intakeIntakeTalon = new WPI_TalonSRX(6);
        //LiveWindow.addActuator("intake", "IntakeTalon", intakeIntakeTalon);
        
        shooterShooterTalon = new WPI_TalonSRX(7);
        //LiveWindow.addActuator("shooter", "ShooterTalon", shooterShooterTalon);
        
        gearAirMaker = new Compressor(0);
        
        
        gearGearSol = new DoubleSolenoid(0, 1, 2);
        LiveWindow.addActuator("gear", "GearSol", gearGearSol);
        
        shakerShakeSol = new DoubleSolenoid(0, 3, 4);
        LiveWindow.addActuator("shaker", "ShakeSol", shakerShakeSol);
        
        cameraServo1 = new Servo(0);
        LiveWindow.addActuator("camera", "Servo 1", cameraServo1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
