// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.Picasso.subsystems;

import org.usfirst.frc0.Picasso.Robot;
import org.usfirst.frc0.Picasso.RobotMap;
import org.usfirst.frc0.Picasso.commands.*;
import com.ctre.CANTalon;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX cANTalon1 = RobotMap.driveCANTalon1;
    private final WPI_TalonSRX cANTalon2 = RobotMap.driveCANTalon2;
    private final WPI_TalonSRX cANTalon3 = RobotMap.driveCANTalon3;
    private final WPI_TalonSRX cANTalon4 = RobotMap.driveCANTalon4;
    private final RobotDrive robotDrive41 = RobotMap.driveRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new joystickDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void joystickImput (Joystick stick) {
    	//double localSpeedVar = Robot.oi.getSpeedVar(); // creates variable speed
    	double localSpeedVar = .75;
    	robotDrive41.tankDrive(stick.getRawAxis(1)*localSpeedVar, stick.getRawAxis(5)*localSpeedVar);
    }
    
    public void forward () {
    	robotDrive41.tankDrive(1, 1);
    }
    
    public void stop () {
    	robotDrive41.tankDrive(0, 0);
    }
    
    public void backward () {
    	robotDrive41.tankDrive(-1, -1);
    }
    
    public void turnLeft () {
    	robotDrive41.tankDrive(-.5, .5);
    }
    
    public void turnRight () {
    	robotDrive41.tankDrive(.5, -.5);
    }
    
//    public void backward() {
  //  	RobotMap.driveCANTalon1.set(-1);
   // }
    
 
    
}

